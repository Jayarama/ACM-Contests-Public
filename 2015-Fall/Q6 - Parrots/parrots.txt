TODO: Story & flavor text
TODO: Make harder
  -Allow for reuse of characters between descriptor sets
    -Fixed ordering of descriptors? For bad inputs as well?
    -Arbitrary ordering

==============================================================================

You will be privided a series of qualifiers which describe birds you know of.
You will also be provided a list of qualifiers for each attempted return.
  
These descriptions must make sense. For example, in a world where only blue
  and red birds exist, sad though it may be, a green bird would be unheard of. 
  Were someone to try and return a supposedly nonexistant bird to your shop, you
  would take issue with this. All valid, mutually exclusive descriptors of a
  specific category comprise a descriptor set.

Being a frugal shop owner suffering an onslaught of questionable customer
  service claims, you have a stinginess factor. Should the questionable nature
  of the return exceed your stinginess factor, you will reject the return.
  Each oddity you note should count once against that claim.

A RED, SCREAMING, COCONUT PARROT could be described as RSCP. A RED, SCREAMING, 
  LIME PARROT could be described as RSLP. A SLUGGISH, RED, LAMENTING, COCONUT
  PARROT could be described as SRLCP.
  
Input will consist of one test case per file. On the first line will be D, the
  number of descriptor sets; N, the number of attempted returns; and S, your
  stinginess factor. On the next line are D descriptor sets. Following these
  are N descriptions of attempted returns.

Your output should consist of either the letter 'y' or 'n' depending on
  whether you accept the return or not.
 

Sample Input 1:
3 3 2
RGB SQD P
RSP
GSP
MHGIP

Sample Output 1:
y
y
n
